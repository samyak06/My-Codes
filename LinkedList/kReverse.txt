Implement kReverse( int k ) in a linked list i.e. you need to reverse first K elements then reverse next k elements and join the linked list and so on.
Indexing starts from 0. If less than k elements left in the last, you need to reverse them as well. If k is greater than length of LL, reverse the complete LL.
//Solution
node* kReverse(node*head,int n)
{
    int j=0;
    node *temp=head,*temp1,*temp2;
    //while(temp!=NULL)
    //{
        //int i=n;
        while(j!=n && temp!=NULL)
        {
            temp2=temp->next;
            if(j!=0)
            {
                temp->next=temp1;
            }
            temp1=temp;
            temp=temp2;
            j++;
        }
    	if(temp!=NULL)
        {
        	head->next=kReverse(temp,n);
        }
    	else
        {
        	head->next= NULL;
        }
        return temp1;
    //}
    //write your code here
}
